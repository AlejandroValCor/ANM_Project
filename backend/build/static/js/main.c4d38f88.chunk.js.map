{"version":3,"sources":["components/Nav.js","components/Map.js","components/EarthquakeForm.js","components/Home.js","components/Loading.js","components/SearchHistory.js","components/LargestEarthquakes.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","className","type","id","to","Map","props","state","selectedEarthquake","paths","lat","this","earthquakeData","north","lng","west","south","east","googleMapsApiKey","process","mapContainerStyle","height","width","zoom","center","latitude","longitude","recentEarthquakes","map","earthquake","position","onClick","setState","icon","url","scaledSize","window","google","maps","Size","eqid","onCloseClick","style","color","fontSize","textAlign","datetime","depth","src","magnitude","options","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeWeight","clickable","draggable","editable","geodesic","zIndex","React","Component","EarthquakeForm","value","handleChange","bind","onSubmit","event","preventDefault","target","onChange","Home","onFormSubmit","address","a","fetch","data","json","earthquakes","error","alert","aling","loadingElement","LoadingWheel","SearchHistory","SearchHistoryData","searchHistory","length","undefined","consult","label","date","LargestEarthquakes","largestEarthquakesData","largestEarthquakes","left","top","transform","App","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","require","config","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4d38f88.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Nav() {\r\n    return(\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark top\">\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navMainMenu\" aria-controls=\"navMainMenu\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div id=\"navMainMenu\" className=\"navbar-collapse collapse\">\r\n                <div className=\"navbar-nav ml-auto\">\r\n                    <Link to='/' className=\"nav-item nav-link\">Home</Link>\r\n                    <Link to='/SearchHistory' className=\"nav-item nav-link\">Search History</Link>\r\n                    <Link to='/LargestEarthquakes' className=\"nav-item nav-link\">Top 10 Earthquakes</Link>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport {GoogleMap, LoadScript, Marker, InfoWindow, Polygon} from '@react-google-maps/api';\r\n\r\nclass Map extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {selectedEarthquake: null};\r\n    }\r\n\r\n    render() {\r\n        const paths = [\r\n            { lat: this.props.earthquakeData.north, lng: this.props.earthquakeData.west },\r\n            { lat: this.props.earthquakeData.south, lng: this.props.earthquakeData.west },\r\n            { lat: this.props.earthquakeData.south, lng: this.props.earthquakeData.east },\r\n            { lat: this.props.earthquakeData.north, lng: this.props.earthquakeData.east },\r\n            { lat: this.props.earthquakeData.north, lng: this.props.earthquakeData.west }\r\n          ]\r\n          \r\n          const options = {\r\n            fillColor: \"blue\",\r\n            fillOpacity: 0.1,\r\n            strokeColor: \"red\",\r\n            strokeOpacity: 1,\r\n            strokeWeight: 2,\r\n            clickable: false,\r\n            draggable: true,\r\n            editable: false,\r\n            geodesic: false,\r\n            zIndex: 1\r\n          }\r\n\r\n        return(\r\n            <LoadScript\r\n                googleMapsApiKey={process.env.REACT_APP_GOOGLEMAPSAPIKEY}\r\n            >\r\n                <GoogleMap\r\n                    mapContainerStyle={{ height: \"45vw\", width: \"80vw\" }}\r\n                    zoom={9}\r\n                    center={{lat: this.props.earthquakeData.latitude, lng: this.props.earthquakeData.longitude}}>\r\n\r\n                    {this.props.earthquakeData.recentEarthquakes.map((earthquake) => (\r\n                        <Marker\r\n                        key={earthquake.eqid}\r\n                        position={{\r\n                            lat: earthquake.lat,\r\n                            lng: earthquake.lng}}\r\n                        onClick={() => {\r\n                            this.setState({selectedEarthquake: earthquake});\r\n                        }}\r\n                        icon={{\r\n                            url: '/Earthquake_Image.png',\r\n                            scaledSize: new window.google.maps.Size(40, 40)\r\n                        }}\r\n                        />   \r\n                    ))}\r\n        \r\n                    {this.state.selectedEarthquake && (\r\n                        <InfoWindow \r\n                        position={{\r\n                            lat: this.state.selectedEarthquake.lat,\r\n                            lng: this.state.selectedEarthquake.lng}}\r\n                            \r\n                        onCloseClick={() => {\r\n                            this.setState({selectedEarthquake: null});\r\n                        }}\r\n                        >\r\n                            <div>\r\n                                <h1 style={{color: 'black', fontSize: 14}}>Earthquake details:</h1>\r\n                                <p style={{color: 'black', fontSize: 14, textAlign: 'left'}}>\r\n                                    Date: {this.state.selectedEarthquake.datetime}<br />\r\n                                    Depth: {this.state.selectedEarthquake.depth}<br />\r\n                                    Source: {this.state.selectedEarthquake.src}<br />\r\n                                    EQID: {this.state.selectedEarthquake.eqid}<br />\r\n                                    Magnitude: {this.state.selectedEarthquake.magnitude}\r\n                                </p>\r\n                            </div>\r\n                        </InfoWindow>\r\n                    )}\r\n\r\n                    {this.props.earthquakeData.north && (\r\n                        <Polygon\r\n                            paths={paths}\r\n                            options={options}\r\n                        />\r\n                    )}\r\n                </GoogleMap>\r\n            </LoadScript>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Map","import React from \"react\";\r\n\r\nclass EarthquakeForm extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {value: ''};\r\n  \r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onSubmit(event) {\r\n      event.preventDefault();\r\n      this.props.onSubmit(this.state.value);\r\n    }\r\n  \r\n    handleChange(event) {\r\n      this.setState({value: event.target.value});\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <form onSubmit={this.onSubmit}>\r\n          <label>\r\n            <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\r\n          </label>\r\n          <input type=\"submit\" value=\"Search\" />\r\n        </form>\r\n      );\r\n    }\r\n}\r\n\r\nexport default EarthquakeForm;","import React from \"react\";\r\nimport Map from './Map';\r\nimport EarthquakeForm from './EarthquakeForm'\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {earthquakeData: {\r\n            \"label\": \"CDMX, Mexico\",\r\n            \"latitude\": 19.43456671929005,\r\n            \"longitude\": -99.13307955861596,\r\n            \"recentEarthquakes\": []\r\n        }};\r\n    \r\n        this.onFormSubmit = this.onFormSubmit.bind(this);\r\n      }\r\n\r\n    async onFormSubmit(address) {\r\n        const data = await fetch(`/earthquakes?address=${address}`);\r\n        const earthquakes = await data.json();\r\n        if(earthquakes.error){\r\n            alert(\"Location not found.\");\r\n        }\r\n        else{\r\n            this.setState({earthquakeData: earthquakes});\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <section>\r\n                <div style={{ width: \"80vw\" }} className=\"container-fluid\">\r\n                    <h1>\r\n                        Recent earthquakes application\r\n                    </h1>\r\n                    <EarthquakeForm aling={'center'} onSubmit={this.onFormSubmit}/>\r\n                    <Map\r\n                        aling={'center'}\r\n                        loadingElement= {<p>Cargando</p>}\r\n                        earthquakeData={this.state.earthquakeData}\r\n                    />\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport {Spinner} from 'reactstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport '../css/Loading.css'\r\n\r\nclass LoadingWheel extends React.Component {\r\n  render() {\r\n    return(\r\n    <div className='divExterior'>\r\n        <div className='divInterior'>\r\n            <Spinner color='success'/>\r\n        </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoadingWheel;","import React from \"react\";\r\nimport LoadingWheel from './Loading';\r\nimport '../css/SearchHistory.css';\r\n\r\nclass SearchHistory extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {SearchHistoryData: ['No search history']}\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const data = await fetch(`/searchHistory`);\r\n    const searchHistory = await data.json();\r\n    this.setState({SearchHistoryData: searchHistory});\r\n  }\r\n\r\n  async componentDidUpdate() {\r\n    const data = await fetch(`/searchHistory`);\r\n    const searchHistory = await data.json();\r\n\r\n    if(searchHistory.error) {\r\n      alert(\"Unknown error.\");\r\n    }\r\n    else{\r\n      this.setState({SearchHistoryData: searchHistory});\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.setState = () =>{\r\n        return;\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <section>\r\n        <div style={{ width: \"80vw\" }} className=\"container-fluid\">\r\n          <h1>\r\n            Earthquakes location search history\r\n          </h1>\r\n        </div>\r\n        {this.state.SearchHistoryData[0] === 'No search history' &&\r\n          <LoadingWheel/>\r\n        }\r\n\r\n        {this.state.SearchHistoryData.length === 0 &&\r\n          <table id='searchHistoryTable'>\r\n            <tbody>\r\n              <tr key={1} className='header'>\r\n                <th>Location</th>\r\n                <th>Date</th>\r\n              </tr>\r\n              <tr key={2}>\r\n                <td>-</td>\r\n                <td>-</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        }\r\n\r\n        {(this.state.SearchHistoryData[0] !== 'No search history' && this.state.SearchHistoryData[0] !== undefined) &&\r\n          <table id='searchHistoryTable'>\r\n            <tbody>\r\n              <tr key={1} className='header'>\r\n                <th>Location</th>\r\n                <th>Date</th>\r\n              </tr>\r\n              {\r\n                this.state.SearchHistoryData.map(consult => (\r\n                    <tr key={consult.date}>\r\n                      <td>{consult.label}</td>\r\n                      <td>{consult.date}</td>\r\n                    </tr>\r\n                ))\r\n              }\r\n            </tbody>\r\n          </table>\r\n        }\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchHistory;","import React from \"react\";\r\nimport LoadingWheel from './Loading';\r\n\r\nclass LargestEarthquakes extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {largestEarthquakesData: []}\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const data = await fetch(`/largestEarthquakes`);\r\n    const largestEarthquakes = await data.json();\r\n\r\n    if(largestEarthquakes.error){\r\n      alert(\"Unknown error.\");\r\n    }\r\n    else{\r\n      this.setState({largestEarthquakesData: largestEarthquakes});\r\n    }\r\n  }\r\n\r\n  async componentDidUpdate() {\r\n    const data = await fetch(`/largestEarthquakes`);\r\n    const largestEarthquakes = await data.json();\r\n    \r\n    if(largestEarthquakes.error) {\r\n      alert(\"Unknown error.\");\r\n    }\r\n    else{\r\n      this.setState({largestEarthquakesData: largestEarthquakes});\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.setState = () =>{\r\n        return;\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <section>\r\n        <div style={{ width: \"80vw\" }} className=\"container-fluid\">\r\n          <h1>\r\n            Top 10 largest earthquakes in the world for the last 12 months\r\n          </h1>\r\n        </div>\r\n        {this.state.largestEarthquakesData.length === 0 &&\r\n          <LoadingWheel/>\r\n        }\r\n\r\n        {this.state.largestEarthquakesData.length !== 0 &&\r\n          this.state.largestEarthquakesData.map(consult => (\r\n            <li key={consult.datetime} className=\"list-group-item d-flex justify-content-between lh-condensed\">\r\n              <div>\r\n                <h5 style={{color: \"black\", textAlign: 'left' }}>{consult.datetime}</h5>\r\n                <h6 style={{color: \"grey\", textAlign: 'left' }}>Latitude: {consult.lat}</h6>\r\n                <h6 style={{color: \"grey\", textAlign: 'left' }}>Longitude: {consult.lng}</h6>\r\n              </div>\r\n              <span style={{color: \"red\", position: 'absolute', left: '95%', top: '50%', transform: 'translate(-50%, -50%)'}}>{consult.magnitude}</span>\r\n            </li>\r\n          ))\r\n        }\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LargestEarthquakes;","import './App.css';\nimport Nav from './components/Nav';\nimport Home from './components/Home';\nimport SearchHistory from './components/SearchHistory';\nimport LargestEarthquakes from './components/LargestEarthquakes'\nimport {BrowserRouter as Router, Routes, Route} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Nav/>\n          <Routes>\n            <Route exact path=\"/\" element={<Home/>}/>\n            <Route exact path=\"/SearchHistory\" element={<SearchHistory/>}/>\n            <Route exact path=\"/LargestEarthquakes\" element={<LargestEarthquakes/>}/>\n          </Routes>\n        </header>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nrequire('dotenv').config();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}